name: Create new project
on:
    workflow_dispatch:
        inputs:
            repository_name:
                description: 'Nombre del repositorio a procesar'
                required: true
                type: string
            port_run_id:
                description: 'ID de la ejecucion en Port'
                required: false
                type: string
            port_context:
                description: 'Contexto proporcionado por Port'
                required: false
                type: string
            blueprint_id:
                description: 'Nombre del blueprint'
                required: false
                type: string
jobs:
    generate-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Install Maven
              run: echo "Maven"
              # run: sudo apt-get update && sudo apt-get install -y maven
            - name: Generate Maven Archetype
              run: mkdir ${{ github.event.inputs.repository_name }}
            #   run: |
            #     mvn archetype:generate \
            #         -DgroupId=com.jcodepoint \
            #         -DartifactId=${{ github.event.inputs.repository_name }} \
            #         -DarchetypeGroupId=org.apache.maven.archetypes \
            #         -DarchetypeArtifactId=maven-archetype-webapp \
            #         -DarchetypeVersion=1.4 \
            #         -DinteractiveMode=false
            # - name: Initialize Git repository
            #   run: |
            #     cd ${{ github.event.inputs.repository_name }}
            #     git init
            #     git config user.name "GitHub Actions"
            #     git config user.email "actions@github.com"
            #     git add .
            #     git commit -m "Initial commit from GitHub Actions"
            - name: Create GitHub repository and push code
              run: |
                ORG=$(gh api user | jq -r '.login')
                REPO_NAME="${{ github.event.inputs.repository_name }}"
                RESPONSE=$(gh api orgs/$ORG/repos \
                -H "Accept: application/vnd.github+json" \
                -f name="$REPO_NAME" \
                -f private=true)
                HTML_URL=$(echo "$RESPONSE" | jq -r '.html_url')
                echo "REPO_URL=$HTML_URL" >> $GITHUB_OUTPUT
              env:
                GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
            - name: Mostrar URL del nuevo repositorio
              run: echo "Repositorio creado: ${{ steps.crear_repo.outputs.REPO_URL }}"
            #   env:
            #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   run: |
            #     gh repo create ${{ github.event.inputs.repository_name }} --public --confirm
            #     cd ${{ github.event.inputs.repository_name }}
            #     git remote add origin https://github.com/${{ github.repository_owner }}/${{ github.event.inputs.repository_name }}.git
            #     # git branch -M main
            #     # git push -u origin main